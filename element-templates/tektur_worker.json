[
	{
		"name": "http-request",
		"id": "tektur.http-request",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "http_request"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "method",
				"type": "Dropdown",
				"value": "get",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "method"
				},
				"description": "HTTP method",
				"constraints": {
					
				},
				"choices": [
					{
						"name": "GET",
						"value": "get"
					},
					{
						"name": "POST",
						"value": "post"
					}
				] 
			},
			{
				"label": "host",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "host"
				},
				"description": "host of the webservice",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "port",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "port"
				},
				"description": "Port to use on the http server, defaults to 8000",
				"constraints": {
					
				}
			},
			{
				"label": "endpoint",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "endpoint"
				},
				"description": "Path to endpoint without host and port part, e.g. \"/v1/documents\"",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "queryParameters",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "queryParameters"
				},
				"description": "Query parameters - These must be defined as Map in the \"Input/Output\" tab. If you need to pass multiple values for the same parameter, name each element with a unique suffix in brackets (i.e. foo[1], foo[2] ...). The actual indexes do not influence the order in which parameters are sent to the server.",
				"constraints": {
					
				}
			},
			{ 
				"label": "XML exist-DB payload",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "existPayload"
				},
				"description": "XML Query for exist-DB for POST request",
				"constraints": {
					
				}
			},
			{
				"label": "responseFilename",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "responseFilename"
				},
				"description": "Name of file to write response to",
				"constraints": {
					
				}
			},
			{
				"label": "status",
				"type": "String",
				"value": "",
				"editable": false,
				"binding": {
					"type": "camunda:outputParameter",
					"source": "${ status }"
				},
				"description": "Status code of the HTTP response",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "mail",
		"id": "tektur.mail",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "send_mail"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "to",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "to"
				},
				"description": "Recipient address, can be an alias or a complete email address",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "subject",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "subject"
				},
				"description": "Subject of the email",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "body",
				"type": "Text",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "body"
				},
				"description": "Email body",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "attachment",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "attachment"
				},
				"description": "Name of attachment (file in Workspace).",
				"constraints": {
					
				}
			},
			{
				"label": "Attachment in eMail",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "attachedName"
				},
				"description": "Name of attachment in the eMail",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "s3-get",
		"id": "tektur.s3-get",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "s3_get"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "bucket",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "bucket"
				},
				"description": "Name of the S3 bucket.",
				"constraints": {
					
				}
			},
			{
				"label": "key",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "key"
				},
				"description": "Key of object to fetch.",
				"constraints": {
					
				}
			},
			{
				"label": "filename",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "filename"
				},
				"description": "Name of the file to fetch object to. The file name is relative to the current local workspace.",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "create-schematron",
		"id": "tektur.geerate-schematron-xslt",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "generate_schematron_xslt"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "Schematron",
				"type": "Text",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "schematron"
				},
				"description": "Inline Schematron rules document to process. Parameter schematron-file must be empty.",
				"constraints": {
					
				}
			},
			{
				"label": "Schematron File",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "schematron-file"
				},
				"description": "Name of the input file that contains the Schematron rules.",
				"constraints": {
					
				}
			},
			{
				"label": "Schematron XSLT",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "schematron-xslt"
				},
				"description": "Name of the result file which contains the compiled schematron rules.",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "s3-list",
		"id": "tektur.s3-list",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "s3_list"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "bucket",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "bucket"
				},
				"description": "Name of the S3 bucket.",
				"constraints": {
					
				}
			},
			{
				"label": "key",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "key"
				},
				"description": "Key of files to match, may include * and ? as wildcards",
				"constraints": {
					
				}
			},
			{
				"label": "objects",
				"type": "String",
				"value": "",
				"editable": false,
				"binding": {
					"type": "camunda:outputParameter",
					"source": "${ objects }"
				},
				"description": "Result of listing",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "s3-put",
		"id": "tektur.s3-put",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "s3_put"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "bucket",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "bucket"
				},
				"description": "Name of the S3 bucket.",
				"constraints": {
					
				}
			},
			{
				"label": "key",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "key"
				},
				"description": "Key to put object to.",
				"constraints": {
					
				}
			},
			{
				"label": "filename",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "filename"
				},
				"description": "Name of the file to put. The file name is relative to the current local workspace.",
				"constraints": {
					"notEmpty": true
				}
			},
			{
				"label": "location",
				"type": "Dropdown",
				"value": "process",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "location"
				},
				"description": "Location of the file to upload",
				"constraints": {
					
				},
				"choices": [
					{
						"name": "process",
						"value": "process"
					},
					{
						"name": "custom",
						"value": "custom"
					}
				]
			}
		]
	},
	{
		"name": "xslt",
		"id": "tektur.xslt",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "transform_xml"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "xslt",
				"type": "Text",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "xslt"
				},
				"description": "Inline XSLT document to process",
				"constraints": {
					
				}
			},
			{
				"label": "xslt-file",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "xslt-file"
				},
				"description": "Path to XSLT file to process",
				"constraints": {
					
				}
			},
			{
				"label": "source-file",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "source-file"
				},
				"description": "Source file to transform",
				"constraints": {
					
				}
			},
			{
				"label": "initial-template",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "initial-template"
				},
				"description": "Name of initial template to call",
				"constraints": {
					
				}
			},
			{
				"label": "destination-file",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "destination-file"
				},
				"description": "Destination file to transform to",
				"constraints": {
					
				}
			},
			{
				"label": "parameters",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "parameters"
				},
				"description": "Map with transformation parameters",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "batch-xslt",
		"id": "tektur.batch_xslt",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "batch_transform_xml"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "xslt-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "xslt-folder"
				},
				"description": "Name of the folder containing XSLT files to process in sort order",
				"constraints": {
					
				}
			},
			{
				"label": "input-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "input-folder"
				},
				"description": "Name of the folder containing the input XML files",
				"constraints": {
					
				}
			},
			{
				"label": "output-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "output-folder"
				},
				"description": "Destination folder to transform to",
				"constraints": {
					
				}
			},
			{
				"label": "parameters",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "parameters"
				},
				"description": "Map with transformation parameters",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "batch-validate",
		"id": "tektur.batch_validate",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "batch_validate_xml"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "input-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "input-folder"
				},
				"description": "Name of the folder containing XML files to be validated",
				"constraints": {
					
				}
			},
			{
				"label": "log-file",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "log-file"
				},
				"description": "Name of the log file to write the validation result to",
				"constraints": {
					
				}
			},			
			{
				"label": "valid",
				"type": "String",
				"value": "",
				"editable": false,
				"binding": {
					"type": "camunda:outputParameter",
					"source": "${ valid }"
				},
				"description": "Boolean result of the validation",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "batch-tidy",
		"id": "tektur.batch_tidy",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "batch_tidy_xml"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "input-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "input-folder"
				},
				"description": "Name of the folder containing XML files to be tidied",
				"constraints": {
					
				}
			},
			{
				"label": "log-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "log-folder"
				},
				"description": "Name of the folder to write the logfiles to",
				"constraints": {
					
				}
			},			
			{
				"label": "output-folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "output-folder"
				},
				"description": "Name of the folder to write the tidied XML files to",
				"constraints": {
					
				}
			},			
			{
				"label": "encoding",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "encoding"
				},
				"description": "Name of the encoding to use, e.g. 'latin1' or 'utf8'",
				"constraints": {
					
				}
			}			
		]
	},
	{
		"name": "unzip",
		"id": "tektur.unzip",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "file_unzip"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "ZIP Filename",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "zipFilename"
				},
				"description": null,
				"constraints": {
					
				}
			},
			{
				"label": "Output Folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "outputFolder"
				},
				"description": "Result will be extracted to the specified folder.",
				"constraints": {
					
				}
			}
		]
	},
	{
		"name": "zip",
		"id": "tektur.zip",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "file_zip"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "ZIP File",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "zipFilename"
				},
				"description": "Name of ZIP file to create",
				"constraints": {
					
				}
			},
			{
				"label": "Input Folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "inputFolder"
				},
				"description": "Name of the Folder to be zipped",
				"constraints": {
					
				}
			},
			{
				"label": "Include Parent Directory",
				"type": "Dropdown",
				"value": "True",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "includeDir"
				},
				"description": "Boolean flag if the parent folder should be included",
				"constraints": {
					
				},
				"choices": [
					{
						"name": "Yes",
						"value": "True"
					},
					{
						"name": "No",
						"value": "False"
					}
				]
			}
		]
	},
	{
		"name": "exist-load",
		"id": "tektur.exist-load",
		"appliesTo": [
			"bpmn:ServiceTask"
		],
		"entriesVisible": {
			"multiInstance-loopCardinality": true,
			"parameterType-text": true,
			"parameterType": true,
			"parameterType-script": true,
			"parameterType-map": true,
			"_all": false,
			"outputs": true,
			"parameterType-list": true,
			"parameterName": true,
			"inputs": true,
			"multiInstance-elementVariable": true,
			"multiInstance-collection": true
		},
		"properties": [
			{
				"binding": {
					"name": "camunda:type",
					"type": "property"
				},
				"type": "Hidden",
				"value": "external"
			},
			{
				"binding": {
					"name": "camunda:topic",
					"type": "property"
				},
				"label": "Topic",
				"type": "String",
				"description": "Task implementation to be executed",
				"value": "exist_load"
			},
			{
				"binding": {
					"name": "camunda:asyncBefore",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"binding": {
					"name": "camunda:asyncAfter",
					"type": "property"
				},
				"type": "Hidden",
				"value": true
			},
			{
				"label": "Input Folder",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "inputFolder"
				},
				"description": "Name of the folder containing the input XML",
				"constraints": {
					
				}
			},
			{
				"label": "DB Path",
				"type": "String",
				"value": "",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "dbPath"
				},
				"description": "Path in the eXist-db where to store the input data",
				"constraints": {
					
				}
			}
		]
	},
	
{
	"name": "move-folder",
	"id": "tektur.move-folder",
	"appliesTo": [
		"bpmn:ServiceTask"
	],
	"entriesVisible": {
		"multiInstance-loopCardinality": true,
		"parameterType-text": true,
		"parameterType": true,
		"parameterType-script": true,
		"parameterType-map": true,
		"_all": false,
		"outputs": true,
		"parameterType-list": true,
		"parameterName": true,
		"inputs": true,
		"multiInstance-elementVariable": true,
		"multiInstance-collection": true
	},
	"properties": [
		{
			"binding": {
				"name": "camunda:type",
				"type": "property"
			},
			"type": "Hidden",
			"value": "external"
		},
		{
			"binding": {
				"name": "camunda:topic",
				"type": "property"
			},
			"label": "Topic",
			"type": "String",
			"description": "Task implementation to be executed",
			"value": "move_folder"
		},
		{
			"binding": {
				"name": "camunda:asyncBefore",
				"type": "property"
			},
			"type": "Hidden",
			"value": true
		},
		{
			"binding": {
				"name": "camunda:asyncAfter",
				"type": "property"
			},
			"type": "Hidden",
			"value": true
		},
		{
			"label": "Source folder",
			"type": "String",
			"value": "",
			"editable": true,
			"binding": {
				"type": "camunda:inputParameter",
				"name": "source-folder"
			},
			"description": "Name of the folder to move.",
			"constraints": {
				
			}
		},
				{
			"label": "Destination folder",
			"type": "String",
			"value": "",
			"editable": true,
			"binding": {
				"type": "camunda:inputParameter",
				"name": "destination-folder"
			},
			"description": "Path to the desitnation folder",
			"constraints": {
				
			}
		},
		{
				"label": "location",
				"type": "Dropdown",
				"value": "process",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "location"
				},
				"description": "Location of the file to upload",
				"constraints": {
					
				},
				"choices": [
					{
						"name": "process",
						"value": "process"
					},
					{
						"name": "external",
						"value": "external"
					}
				]
			},
					{
				"label": "Delete",
				"type": "Dropdown",
				"value": "yes",
				"editable": true,
				"binding": {
					"type": "camunda:inputParameter",
					"name": "delete"
				},
				"description": "Flag wether the folder should be deleted or not",
				"constraints": {
					
				},
				"choices": [
					{
						"name": "yes",
						"value": "yes"
					},
					{
						"name": "no",
						"value": "not"
					}
				]
			}
		
		
	]
},
		{
				"name": "make-path",
				"id": "tektur.make-path",
				"appliesTo": [
					"bpmn:ServiceTask"
				],
				"entriesVisible": {
				"multiInstance-loopCardinality": true,
				"parameterType-text": true,
				"parameterType": true,
				"parameterType-script": true,
				"parameterType-map": true,
				"_all": false,
				"outputs": true,
				"parameterType-list": true,
				"parameterName": true,
				"inputs": true,
				"multiInstance-elementVariable": true,
				"multiInstance-collection": true
			},
			"properties": [
				{
					"binding": {
						"name": "camunda:type",
						"type": "property"
					},
					"type": "Hidden",
					"value": "external"
				},
				{
					"binding": {
						"name": "camunda:topic",
						"type": "property"
					},
					"label": "Topic",
					"type": "String",
					"description": "Task implementation to be executed",
					"value": "make_path"
				},
				{
					"binding": {
						"name": "camunda:asyncBefore",
						"type": "property"
					},
					"type": "Hidden",
					"value": true
				},
				{
					"binding": {
						"name": "camunda:asyncAfter",
						"type": "property"
					},
					"type": "Hidden",
					"value": true
				},
				{
					"label": "Path to be created",
					"type": "String",
					"value": "",
					"editable": true,
					"binding": {
						"type": "camunda:inputParameter",
						"name": "path"
					},
					"description": "Name of the folder structure to be creaated.",
					"constraints": {
					
			}
		}
	]
},
		{
				"name": "delete-path",
				"id": "tektur.delete-path",
				"appliesTo": [
					"bpmn:ServiceTask"
				],
				"entriesVisible": {
				"multiInstance-loopCardinality": true,
				"parameterType-text": true,
				"parameterType": true,
				"parameterType-script": true,
				"parameterType-map": true,
				"_all": false,
				"outputs": true,
				"parameterType-list": true,
				"parameterName": true,
				"inputs": true,
				"multiInstance-elementVariable": true,
				"multiInstance-collection": true
			},
			"properties": [
				{
					"binding": {
						"name": "camunda:type",
						"type": "property"
					},
					"type": "Hidden",
					"value": "external"
				},
				{
					"binding": {
						"name": "camunda:topic",
						"type": "property"
					},
					"label": "Topic",
					"type": "String",
					"description": "Task implementation to be executed",
					"value": "delete_path"
				},
				{
					"binding": {
						"name": "camunda:asyncBefore",
						"type": "property"
					},
					"type": "Hidden",
					"value": true
				},
				{
					"binding": {
						"name": "camunda:asyncAfter",
						"type": "property"
					},
					"type": "Hidden",
					"value": true
				},
				{
					"label": "Path to be deleted",
					"type": "String",
					"value": "",
					"editable": true,
					"binding": {
						"type": "camunda:inputParameter",
						"name": "path"
					},
					"description": "Name of the folder structure to be deleted.",
					"constraints": {
					
			}
		}
    ]
}			
]