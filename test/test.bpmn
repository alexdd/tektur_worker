<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_1026m6m" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.12.0">
  <bpmn:collaboration id="Collaboration_0nrr462">
    <bpmn:participant id="Participant_1junhp7" processRef="Python_Task_test" />
  </bpmn:collaboration>
  <bpmn:process id="Python_Task_test" isExecutable="true">
    <bpmn:serviceTask id="Task_049w7j6" name="unzip" camunda:modelerTemplate="tektur.unzip" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="file_unzip">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="outputFolder">test</camunda:inputParameter>
          <camunda:inputParameter name="zipFilename">${objects.toArray()[0]}</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1l3t2pe</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_094bbxy</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_1pwh6ea" name="s3 get" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">${objects.toArray()[0]}</camunda:inputParameter>
          <camunda:inputParameter name="filename">${objects.toArray()[0]}</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1va1iex</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1l3t2pe</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_04c2w9l" name="s3 list" camunda:modelerTemplate="tektur.s3-list" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_list">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">^test\.zip$</camunda:inputParameter>
          <camunda:outputParameter name="objects">${ objects }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1fpkdf4</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1va1iex</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_1k9ktll" name="s3 put" camunda:modelerTemplate="tektur.s3-put" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_put">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="filename">c:\test\test.zip</camunda:inputParameter>
          <camunda:inputParameter name="location">custom</camunda:inputParameter>
          <camunda:inputParameter name="key">test.zip</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1bd8p9s</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1fpkdf4</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_1hbhnut" name="xslt from file" camunda:modelerTemplate="tektur.xslt" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="transform_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="xslt" />
          <camunda:inputParameter name="initial-template" />
          <camunda:inputParameter name="parameters" />
          <camunda:inputParameter name="xslt-file">test/test.xsl</camunda:inputParameter>
          <camunda:inputParameter name="source-file">test/test.xml</camunda:inputParameter>
          <camunda:inputParameter name="destination-file">result/result.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_094bbxy</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1fs1yzj</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0hg5bxe" name="xslt inline" camunda:modelerTemplate="tektur.xslt" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="transform_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="xslt-file" />
          <camunda:inputParameter name="parameters">
            <camunda:map>
              <camunda:entry key="name">alex</camunda:entry>
            </camunda:map>
          </camunda:inputParameter>
          <camunda:inputParameter name="source-file">test/test.xml</camunda:inputParameter>
          <camunda:inputParameter name="initial-template">main</camunda:inputParameter>
          <camunda:inputParameter name="destination-file">result/result-inline.xml</camunda:inputParameter>
          <camunda:inputParameter name="xslt">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    version="2.0"&gt;

  &lt;xsl:param name="name"/&gt;
    
    &lt;xsl:template name="main"&gt;
       &lt;test&gt;Hello World from Inline XSLT says:
       &lt;xsl:value-of select="$name"/&gt;&lt;/test&gt;
&lt;/xsl:template&gt;
    
&lt;/xsl:stylesheet&gt;</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1fs1yzj</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1j8zdbd</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0qajksg" name="zip" camunda:modelerTemplate="tektur.zip" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="file_zip">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="zipFilename">result.zip</camunda:inputParameter>
          <camunda:inputParameter name="inputFolder">result</camunda:inputParameter>
          <camunda:inputParameter name="includeDir">False</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1j8zdbd</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1ruutix</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0fnfrqy" name="s3 put" camunda:modelerTemplate="tektur.s3-put" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_put">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="location">process</camunda:inputParameter>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">result.zip</camunda:inputParameter>
          <camunda:inputParameter name="filename">result.zip</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1ruutix</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1co9sif</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_15rppzx" name="send email" camunda:modelerTemplate="tektur.mail" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="send_mail">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="subject">Test from Tektur worker</camunda:inputParameter>
          <camunda:inputParameter name="body">This is a test with an attachment</camunda:inputParameter>
          <camunda:inputParameter name="attachment">result.zip</camunda:inputParameter>
          <camunda:inputParameter name="to">tekturcms@gmail.com</camunda:inputParameter>
          <camunda:inputParameter name="attachedName">result_${dateTime().now().toString().split("T")[0]}.zip</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1co9sif</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1fn0nza</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_150say3" name="load exist" camunda:modelerTemplate="tektur.exist-load" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="exist_load">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="dbPath">/db/result</camunda:inputParameter>
          <camunda:inputParameter name="inputFolder">result</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1fn0nza</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_18c121e</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0m4nx7q" name="s3 get XSLT zip" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">xslt.zip</camunda:inputParameter>
          <camunda:inputParameter name="filename">xslt.zip</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_18c121e</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_05474ph</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_06wi83w" name="unzip xslt" camunda:modelerTemplate="tektur.unzip" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="file_unzip">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="zipFilename">xslt.zip</camunda:inputParameter>
          <camunda:inputParameter name="outputFolder">xslt</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_05474ph</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_103eaem</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_1of9yep" name="batch convert xml" camunda:modelerTemplate="tektur.batch_xslt" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="batch_transform_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="parameters" />
          <camunda:inputParameter name="xslt-folder">xslt</camunda:inputParameter>
          <camunda:inputParameter name="input-folder">result</camunda:inputParameter>
          <camunda:inputParameter name="output-folder">result-batch</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_103eaem</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1f79owo</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_03dbwqm" name="validate  xml" camunda:modelerTemplate="tektur.batch_validate" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="batch_validate_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="log-file">log.txt</camunda:inputParameter>
          <camunda:inputParameter name="input-folder">result-batch\step20</camunda:inputParameter>
          <camunda:outputParameter name="valid">${ valid }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1f79owo</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0jz0t24</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_1ii8nqh" name="get html files" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">html.zip</camunda:inputParameter>
          <camunda:inputParameter name="filename">html.zip</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0jz0t24</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_19el1sx</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0qhjvnp" name="unzip html" camunda:modelerTemplate="tektur.unzip" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="file_unzip">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="zipFilename">html.zip</camunda:inputParameter>
          <camunda:inputParameter name="outputFolder">html</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_19el1sx</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0v8fx9a</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0zie3is" name="tidy html files" camunda:modelerTemplate="tektur.batch_tidy" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="batch_tidy_html">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="input-folder">html</camunda:inputParameter>
          <camunda:inputParameter name="output-folder">tidy</camunda:inputParameter>
          <camunda:inputParameter name="log-folder">log</camunda:inputParameter>
          <camunda:inputParameter name="encoding">latin1</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0v8fx9a</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_15bbevz</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0smq08j" name="make path" camunda:modelerTemplate="tektur.make-path" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="make_path">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="path">C:\test\sub1\sub2</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_17kvdl1</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1fjtgsw</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0oo63zr" name="move folder" camunda:modelerTemplate="tektur.move-folder" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="move_folder">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="source-folder">result-batch</camunda:inputParameter>
          <camunda:inputParameter name="location">external</camunda:inputParameter>
          <camunda:inputParameter name="destination-folder">c:\test\result-batch</camunda:inputParameter>
          <camunda:inputParameter name="delete">yes</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0y4dhgb</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_17kvdl1</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0wnekt9" name="delete path" camunda:modelerTemplate="tektur.delete-path" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="delete_path">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="path">C:\test\sub1</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1fjtgsw</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1c6amon</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="Task_0cosis1" name="create schematron xslt" camunda:modelerTemplate="tektur.geerate-schematron-xslt" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="generate_schematron_xslt">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="schematron">&lt;schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2"
    xmlns:sqf="http://www.schematron-quickfix.com/validator/process"
    xmlns="http://purl.oclc.org/dsdl/schematron"&gt;
    &lt;pattern&gt;
        &lt;rule context="end"&gt;
            &lt;assert test=". &amp;gt; preceding-sibling::start"&gt;The  
                end page cannot be less than the start page&lt;/assert&gt;
        &lt;/rule&gt;
    &lt;/pattern&gt;
&lt;/schema&gt;</camunda:inputParameter>
          <camunda:inputParameter name="schematron-file" />
          <camunda:inputParameter name="schematron-xslt">schematron-test.xsl</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1c6amon</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0miee32</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:extensionElements>
        <camunda:formData>
          <camunda:formField id="test" label="test" type="string" />
        </camunda:formData>
      </bpmn:extensionElements>
      <bpmn:outgoing>SequenceFlow_11pbjwo</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="SequenceFlow_0miee32" sourceRef="Task_0cosis1" targetRef="ServiceTask_0s3fd9v" />
    <bpmn:sequenceFlow id="SequenceFlow_17kvdl1" sourceRef="Task_0oo63zr" targetRef="Task_0smq08j" />
    <bpmn:sequenceFlow id="SequenceFlow_1c6amon" sourceRef="Task_0wnekt9" targetRef="Task_0cosis1" />
    <bpmn:sequenceFlow id="SequenceFlow_1fjtgsw" sourceRef="Task_0smq08j" targetRef="Task_0wnekt9" />
    <bpmn:sequenceFlow id="SequenceFlow_0v8fx9a" sourceRef="Task_0qhjvnp" targetRef="Task_0zie3is" />
    <bpmn:sequenceFlow id="SequenceFlow_19el1sx" sourceRef="Task_1ii8nqh" targetRef="Task_0qhjvnp" />
    <bpmn:sequenceFlow id="SequenceFlow_0jz0t24" sourceRef="Task_03dbwqm" targetRef="Task_1ii8nqh" />
    <bpmn:sequenceFlow id="SequenceFlow_1f79owo" sourceRef="Task_1of9yep" targetRef="Task_03dbwqm" />
    <bpmn:sequenceFlow id="SequenceFlow_103eaem" sourceRef="Task_06wi83w" targetRef="Task_1of9yep" />
    <bpmn:sequenceFlow id="SequenceFlow_05474ph" sourceRef="Task_0m4nx7q" targetRef="Task_06wi83w" />
    <bpmn:sequenceFlow id="SequenceFlow_18c121e" sourceRef="Task_150say3" targetRef="Task_0m4nx7q" />
    <bpmn:sequenceFlow id="SequenceFlow_1fn0nza" sourceRef="Task_15rppzx" targetRef="Task_150say3" />
    <bpmn:sequenceFlow id="SequenceFlow_1j8zdbd" sourceRef="Task_0hg5bxe" targetRef="Task_0qajksg" />
    <bpmn:sequenceFlow id="SequenceFlow_1fs1yzj" sourceRef="Task_1hbhnut" targetRef="Task_0hg5bxe" />
    <bpmn:sequenceFlow id="SequenceFlow_094bbxy" sourceRef="Task_049w7j6" targetRef="Task_1hbhnut" />
    <bpmn:sequenceFlow id="SequenceFlow_1fpkdf4" sourceRef="Task_1k9ktll" targetRef="Task_04c2w9l" />
    <bpmn:sequenceFlow id="SequenceFlow_1l3t2pe" sourceRef="Task_1pwh6ea" targetRef="Task_049w7j6" />
    <bpmn:sequenceFlow id="SequenceFlow_1va1iex" sourceRef="Task_04c2w9l" targetRef="Task_1pwh6ea" />
    <bpmn:sequenceFlow id="SequenceFlow_11pbjwo" sourceRef="StartEvent_1" targetRef="Task_1k4ajla" />
    <bpmn:sequenceFlow id="SequenceFlow_1ruutix" sourceRef="Task_0qajksg" targetRef="Task_0fnfrqy" />
    <bpmn:sequenceFlow id="SequenceFlow_1co9sif" sourceRef="Task_0fnfrqy" targetRef="Task_15rppzx" />
    <bpmn:userTask id="Task_0g894iz" name="check results">
      <bpmn:incoming>SequenceFlow_14jsw44</bpmn:incoming>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_14jsw44" sourceRef="ExclusiveGateway_0y9ovrw" targetRef="Task_0g894iz" />
    <bpmn:sequenceFlow id="SequenceFlow_1bd8p9s" sourceRef="ServiceTask_1sntbh3" targetRef="Task_1k9ktll" />
    <bpmn:exclusiveGateway id="ExclusiveGateway_0y9ovrw" default="SequenceFlow_14jsw44">
      <bpmn:incoming>SequenceFlow_01jb1og</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_14jsw44</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_18jkzmr</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:serviceTask id="ServiceTask_1sntbh3" name="url get" camunda:modelerTemplate="tektur.http-request" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="http_request">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="method">get</camunda:inputParameter>
          <camunda:inputParameter name="queryParameters">
            <camunda:map>
              <camunda:entry key="name">alice</camunda:entry>
            </camunda:map>
          </camunda:inputParameter>
          <camunda:inputParameter name="existPayload" />
          <camunda:inputParameter name="host">localhost</camunda:inputParameter>
          <camunda:inputParameter name="responseFilename">url-get-result.xml</camunda:inputParameter>
          <camunda:inputParameter name="endpoint">exist/rest/db/result/callme.xqy</camunda:inputParameter>
          <camunda:inputParameter name="port">8081</camunda:inputParameter>
          <camunda:outputParameter name="status2">${ status }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_18jkzmr</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1bd8p9s</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="ServiceTask_04z5pcx" name="s3 put" camunda:modelerTemplate="tektur.s3-put" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_put">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="location">custom</camunda:inputParameter>
          <camunda:inputParameter name="key">payload.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">c:\test\payload.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_15bbevz</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0friylv</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="ServiceTask_1lb5q6j" name="s3 get" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">payload.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">payload.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0friylv</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_09kk16c</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_15bbevz" sourceRef="Task_0zie3is" targetRef="ServiceTask_04z5pcx" />
    <bpmn:sequenceFlow id="SequenceFlow_0friylv" sourceRef="ServiceTask_04z5pcx" targetRef="ServiceTask_1lb5q6j" />
    <bpmn:sequenceFlow id="SequenceFlow_09kk16c" sourceRef="ServiceTask_1lb5q6j" targetRef="Task_1g3b4uj" />
    <bpmn:sequenceFlow id="SequenceFlow_0y4dhgb" name="poststatus = &#39;200&#39;" sourceRef="ExclusiveGateway_0px7tsf" targetRef="Task_0oo63zr">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${ poststatus == '200'}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="ExclusiveGateway_0px7tsf" default="SequenceFlow_0jl18in">
      <bpmn:incoming>SequenceFlow_08tnx68</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0y4dhgb</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0jl18in</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0jl18in" sourceRef="ExclusiveGateway_0px7tsf" targetRef="Task_1rs5273" />
    <bpmn:userTask id="Task_1rs5273" name="check results">
      <bpmn:incoming>SequenceFlow_0jl18in</bpmn:incoming>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_08tnx68" sourceRef="Task_1g3b4uj" targetRef="ExclusiveGateway_0px7tsf" />
    <bpmn:serviceTask id="Task_1g3b4uj" name="url post" camunda:modelerTemplate="tektur.http-request" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="http_request">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="method">get</camunda:inputParameter>
          <camunda:inputParameter name="queryParameters" />
          <camunda:inputParameter name="host">localhost</camunda:inputParameter>
          <camunda:inputParameter name="endpoint">exist/rest/db/</camunda:inputParameter>
          <camunda:inputParameter name="responseFilename">post-request-result.xml</camunda:inputParameter>
          <camunda:inputParameter name="existPayload">payload.xml</camunda:inputParameter>
          <camunda:inputParameter name="port">8081</camunda:inputParameter>
          <camunda:outputParameter name="poststatus">${ status }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_09kk16c</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_08tnx68</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_01jb1og" sourceRef="Task_1k4ajla" targetRef="ExclusiveGateway_0y9ovrw" />
    <bpmn:serviceTask id="Task_1k4ajla" name="url get" camunda:modelerTemplate="tektur.http-request" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="http_request">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="method">get</camunda:inputParameter>
          <camunda:inputParameter name="queryParameters">
            <camunda:map>
              <camunda:entry key="name">alice</camunda:entry>
            </camunda:map>
          </camunda:inputParameter>
          <camunda:inputParameter name="existPayload" />
          <camunda:inputParameter name="host">localhost</camunda:inputParameter>
          <camunda:inputParameter name="endpoint">exist/rest/db/result/callmexxx.xqy</camunda:inputParameter>
          <camunda:inputParameter name="responseFilename">url-get-result</camunda:inputParameter>
          <camunda:inputParameter name="port">8081</camunda:inputParameter>
          <camunda:outputParameter name="status">${ status }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_11pbjwo</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_01jb1og</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_18jkzmr" sourceRef="ExclusiveGateway_0y9ovrw" targetRef="ServiceTask_1sntbh3">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${ status != '200' }</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="ServiceTask_0s3fd9v" name="s3 put diff file 1" camunda:modelerTemplate="tektur.s3-put" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_put">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="location">custom</camunda:inputParameter>
          <camunda:inputParameter name="key">diff1.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">c:\test\diff1.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0miee32</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0gapvle</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0gapvle" sourceRef="ServiceTask_0s3fd9v" targetRef="ServiceTask_0gup9xg" />
    <bpmn:sequenceFlow id="SequenceFlow_0gg5h4d" sourceRef="Task_092ysub" targetRef="ExclusiveGateway_02nr46h" />
    <bpmn:serviceTask id="Task_092ysub" name="diff xml" camunda:modelerTemplate="tektur.compare-xml" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="compare_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="source-file">diff1.xml</camunda:inputParameter>
          <camunda:inputParameter name="file-to-compare-to">diff2.xml</camunda:inputParameter>
          <camunda:outputParameter name="differ">${ differ }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1et5axa</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0gg5h4d</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="ServiceTask_1atyet0" name="s3 put diff file 1" camunda:modelerTemplate="tektur.s3-put" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_put">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="location">custom</camunda:inputParameter>
          <camunda:inputParameter name="key">diff2.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">c:\test\diff2.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0j1li00</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0bkuqir</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0bkuqir" sourceRef="ServiceTask_1atyet0" targetRef="ServiceTask_0xu3k0a" />
    <bpmn:sequenceFlow id="SequenceFlow_0xt9fil" sourceRef="ExclusiveGateway_02nr46h" targetRef="Task_0oh67ml" />
    <bpmn:userTask id="Task_0oh67ml" name="check results">
      <bpmn:incoming>SequenceFlow_0xt9fil</bpmn:incoming>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="ExclusiveGateway_02nr46h" default="SequenceFlow_0xt9fil">
      <bpmn:incoming>SequenceFlow_0gg5h4d</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xt9fil</bpmn:outgoing>
      <bpmn:outgoing>SequenceFlow_0j174i8</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="SequenceFlow_0j174i8" name="differ == true" sourceRef="ExclusiveGateway_02nr46h" targetRef="Task_1mr9wck">
      <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression">${differ == true}</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:serviceTask id="ServiceTask_0gup9xg" name="s3 get" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">diff1.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">diff1.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0gapvle</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0j1li00</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0j1li00" sourceRef="ServiceTask_0gup9xg" targetRef="ServiceTask_1atyet0" />
    <bpmn:serviceTask id="ServiceTask_0xu3k0a" name="s3 get" camunda:modelerTemplate="tektur.s3-get" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="s3_get">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="bucket">tektur</camunda:inputParameter>
          <camunda:inputParameter name="key">diff2.xml</camunda:inputParameter>
          <camunda:inputParameter name="filename">diff2.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0bkuqir</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1et5axa</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_1et5axa" sourceRef="ServiceTask_0xu3k0a" targetRef="Task_092ysub" />
    <bpmn:serviceTask id="Task_1mr9wck" name="unzip result again" camunda:modelerTemplate="tektur.unzip" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="file_unzip">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="zipFilename">result.zip</camunda:inputParameter>
          <camunda:inputParameter name="outputFolder">result2</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0j174i8</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_19nsbvi</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_19nsbvi" sourceRef="Task_1mr9wck" targetRef="Task_00an17w" />
    <bpmn:serviceTask id="Task_00an17w" name="batch compare xml" camunda:modelerTemplate="tektur.batch-compare-xml" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="batch_compare_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="source-folder">result</camunda:inputParameter>
          <camunda:inputParameter name="folder-to-compare-to">result2</camunda:inputParameter>
          <camunda:outputParameter name="delta">${ delta }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_19nsbvi</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_04gz9b2</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_04gz9b2" sourceRef="Task_00an17w" targetRef="Task_08ljexp" />
    <bpmn:serviceTask id="Task_08ljexp" name="write result file" camunda:modelerTemplate="tektur.write-data" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="write_data">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="path">compare-result.json</camunda:inputParameter>
          <camunda:inputParameter name="data">${delta}</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_04gz9b2</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xdsz36</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0xdsz36" sourceRef="Task_08ljexp" targetRef="Task_0wrt5b2" />
    <bpmn:userTask id="Task_116qhv6" name="check results">
      <bpmn:incoming>SequenceFlow_1xigbyd</bpmn:incoming>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="SequenceFlow_0oc61o5" sourceRef="Task_0wrt5b2" targetRef="ServiceTask_14sggsb" />
    <bpmn:serviceTask id="Task_0wrt5b2" name="write xm file" camunda:modelerTemplate="tektur.write-data" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="write_data">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="data">&lt;c&gt;&lt;/c&gt;</camunda:inputParameter>
          <camunda:inputParameter name="path">result/test.xml</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0xdsz36</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0oc61o5</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:serviceTask id="ServiceTask_14sggsb" name="batch compare xml" camunda:modelerTemplate="tektur.batch-compare-xml" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="batch_compare_xml">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="source-folder">result</camunda:inputParameter>
          <camunda:inputParameter name="folder-to-compare-to">result2</camunda:inputParameter>
          <camunda:outputParameter name="delta">${ delta }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0oc61o5</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0zuqnr5</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_0zuqnr5" sourceRef="ServiceTask_14sggsb" targetRef="ServiceTask_1lpyf7a" />
    <bpmn:serviceTask id="ServiceTask_1lpyf7a" name="write result file" camunda:modelerTemplate="tektur.write-data" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="write_data">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="data">${delta}</camunda:inputParameter>
          <camunda:inputParameter name="path">compare-result2.json</camunda:inputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_0zuqnr5</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1l4sexu</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:sequenceFlow id="SequenceFlow_1l4sexu" sourceRef="ServiceTask_1lpyf7a" targetRef="Task_0kh9oz8" />
    <bpmn:sequenceFlow id="SequenceFlow_1xigbyd" sourceRef="Task_0kh9oz8" targetRef="Task_116qhv6" />
    <bpmn:serviceTask id="Task_0kh9oz8" name="read result file" camunda:modelerTemplate="tektur.read-data" camunda:asyncBefore="true" camunda:asyncAfter="true" camunda:type="external" camunda:topic="read_data">
      <bpmn:extensionElements>
        <camunda:inputOutput>
          <camunda:inputParameter name="path">compare-result2.json</camunda:inputParameter>
          <camunda:outputParameter name="data">${ data }</camunda:outputParameter>
        </camunda:inputOutput>
      </bpmn:extensionElements>
      <bpmn:incoming>SequenceFlow_1l4sexu</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_1xigbyd</bpmn:outgoing>
    </bpmn:serviceTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_0nrr462">
      <bpmndi:BPMNShape id="Participant_1junhp7_di" bpmnElement="Participant_1junhp7" isHorizontal="true">
        <dc:Bounds x="170" y="70" width="1190" height="890" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="SequenceFlow_1xigbyd_di" bpmnElement="SequenceFlow_1xigbyd">
        <di:waypoint x="1210" y="740" />
        <di:waypoint x="1210" y="850" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1l4sexu_di" bpmnElement="SequenceFlow_1l4sexu">
        <di:waypoint x="1210" y="630" />
        <di:waypoint x="1210" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0zuqnr5_di" bpmnElement="SequenceFlow_0zuqnr5">
        <di:waypoint x="1210" y="520" />
        <di:waypoint x="1210" y="550" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0oc61o5_di" bpmnElement="SequenceFlow_0oc61o5">
        <di:waypoint x="1210" y="420" />
        <di:waypoint x="1210" y="440" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0xdsz36_di" bpmnElement="SequenceFlow_0xdsz36">
        <di:waypoint x="1210" y="296" />
        <di:waypoint x="1210" y="340" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_04gz9b2_di" bpmnElement="SequenceFlow_04gz9b2">
        <di:waypoint x="1210" y="170" />
        <di:waypoint x="1210" y="216" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_19nsbvi_di" bpmnElement="SequenceFlow_19nsbvi">
        <di:waypoint x="1110" y="256" />
        <di:waypoint x="1135" y="256" />
        <di:waypoint x="1135" y="130" />
        <di:waypoint x="1160" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1et5axa_di" bpmnElement="SequenceFlow_1et5axa">
        <di:waypoint x="1010" y="361" />
        <di:waypoint x="980" y="350" />
        <di:waypoint x="980" y="286" />
        <di:waypoint x="950" y="286" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0j1li00_di" bpmnElement="SequenceFlow_0j1li00">
        <di:waypoint x="1010" y="480" />
        <di:waypoint x="980" y="480" />
        <di:waypoint x="980" y="416" />
        <di:waypoint x="950" y="416" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0j174i8_di" bpmnElement="SequenceFlow_0j174i8">
        <di:waypoint x="900" y="155" />
        <di:waypoint x="900" y="180" />
        <di:waypoint x="1060" y="180" />
        <di:waypoint x="1060" y="216" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="948" y="193" width="63" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0xt9fil_di" bpmnElement="SequenceFlow_0xt9fil">
        <di:waypoint x="925" y="130" />
        <di:waypoint x="1010" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0bkuqir_di" bpmnElement="SequenceFlow_0bkuqir">
        <di:waypoint x="950" y="400" />
        <di:waypoint x="980" y="400" />
        <di:waypoint x="980" y="380" />
        <di:waypoint x="1010" y="380" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0gg5h4d_di" bpmnElement="SequenceFlow_0gg5h4d">
        <di:waypoint x="900" y="246" />
        <di:waypoint x="900" y="155" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0gapvle_di" bpmnElement="SequenceFlow_0gapvle">
        <di:waypoint x="950" y="540" />
        <di:waypoint x="980" y="540" />
        <di:waypoint x="980" y="500" />
        <di:waypoint x="1010" y="500" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_18jkzmr_di" bpmnElement="SequenceFlow_18jkzmr">
        <di:waypoint x="490" y="155" />
        <di:waypoint x="490" y="170" />
        <di:waypoint x="579" y="170" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_01jb1og_di" bpmnElement="SequenceFlow_01jb1og">
        <di:waypoint x="421" y="130" />
        <di:waypoint x="465" y="130" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_08tnx68_di" bpmnElement="SequenceFlow_08tnx68">
        <di:waypoint x="700" y="890" />
        <di:waypoint x="755" y="890" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0jl18in_di" bpmnElement="SequenceFlow_0jl18in">
        <di:waypoint x="805" y="890" />
        <di:waypoint x="860" y="890" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0y4dhgb_di" bpmnElement="SequenceFlow_0y4dhgb">
        <di:waypoint x="780" y="865" />
        <di:waypoint x="780" y="830" />
        <di:waypoint x="539" y="830" />
        <di:waypoint x="539" y="810" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="619" y="812" width="86" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_09kk16c_di" bpmnElement="SequenceFlow_09kk16c">
        <di:waypoint x="549" y="890" />
        <di:waypoint x="600" y="890" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0friylv_di" bpmnElement="SequenceFlow_0friylv">
        <di:waypoint x="419" y="890" />
        <di:waypoint x="449" y="890" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_15bbevz_di" bpmnElement="SequenceFlow_15bbevz">
        <di:waypoint x="369" y="810" />
        <di:waypoint x="369" y="850" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1bd8p9s_di" bpmnElement="SequenceFlow_1bd8p9s">
        <di:waypoint x="579" y="190" />
        <di:waypoint x="440" y="190" />
        <di:waypoint x="440" y="256" />
        <di:waypoint x="419" y="256" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_14jsw44_di" bpmnElement="SequenceFlow_14jsw44">
        <di:waypoint x="495" y="110" />
        <di:waypoint x="709" y="110" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1co9sif_di" bpmnElement="SequenceFlow_1co9sif">
        <di:waypoint x="369" y="456" />
        <di:waypoint x="369" y="500" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1ruutix_di" bpmnElement="SequenceFlow_1ruutix">
        <di:waypoint x="449" y="416" />
        <di:waypoint x="419" y="416" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_11pbjwo_di" bpmnElement="SequenceFlow_11pbjwo">
        <di:waypoint x="277" y="150" />
        <di:waypoint x="321" y="150" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1va1iex_di" bpmnElement="SequenceFlow_1va1iex">
        <di:waypoint x="549" y="286" />
        <di:waypoint x="579" y="286" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1l3t2pe_di" bpmnElement="SequenceFlow_1l3t2pe">
        <di:waypoint x="679" y="286" />
        <di:waypoint x="709" y="286" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1fpkdf4_di" bpmnElement="SequenceFlow_1fpkdf4">
        <di:waypoint x="419" y="286" />
        <di:waypoint x="449" y="286" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_094bbxy_di" bpmnElement="SequenceFlow_094bbxy">
        <di:waypoint x="759" y="326" />
        <di:waypoint x="759" y="376" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1fs1yzj_di" bpmnElement="SequenceFlow_1fs1yzj">
        <di:waypoint x="709" y="416" />
        <di:waypoint x="679" y="416" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1j8zdbd_di" bpmnElement="SequenceFlow_1j8zdbd">
        <di:waypoint x="579" y="416" />
        <di:waypoint x="549" y="416" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1fn0nza_di" bpmnElement="SequenceFlow_1fn0nza">
        <di:waypoint x="419" y="540" />
        <di:waypoint x="449" y="540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_18c121e_di" bpmnElement="SequenceFlow_18c121e">
        <di:waypoint x="549" y="540" />
        <di:waypoint x="579" y="540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_05474ph_di" bpmnElement="SequenceFlow_05474ph">
        <di:waypoint x="679" y="540" />
        <di:waypoint x="709" y="540" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_103eaem_di" bpmnElement="SequenceFlow_103eaem">
        <di:waypoint x="759" y="580" />
        <di:waypoint x="759" y="620" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1f79owo_di" bpmnElement="SequenceFlow_1f79owo">
        <di:waypoint x="709" y="660" />
        <di:waypoint x="679" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0jz0t24_di" bpmnElement="SequenceFlow_0jz0t24">
        <di:waypoint x="579" y="660" />
        <di:waypoint x="549" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_19el1sx_di" bpmnElement="SequenceFlow_19el1sx">
        <di:waypoint x="449" y="660" />
        <di:waypoint x="419" y="660" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0v8fx9a_di" bpmnElement="SequenceFlow_0v8fx9a">
        <di:waypoint x="369" y="700" />
        <di:waypoint x="369" y="730" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1fjtgsw_di" bpmnElement="SequenceFlow_1fjtgsw">
        <di:waypoint x="679" y="770" />
        <di:waypoint x="709" y="770" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_1c6amon_di" bpmnElement="SequenceFlow_1c6amon">
        <di:waypoint x="809" y="770" />
        <di:waypoint x="900" y="770" />
        <di:waypoint x="900" y="700" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_17kvdl1_di" bpmnElement="SequenceFlow_17kvdl1">
        <di:waypoint x="549" y="770" />
        <di:waypoint x="579" y="770" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="SequenceFlow_0miee32_di" bpmnElement="SequenceFlow_0miee32">
        <di:waypoint x="900" y="620" />
        <di:waypoint x="900" y="580" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="ServiceTask_1ln69gv_di" bpmnElement="Task_049w7j6">
        <dc:Bounds x="709" y="246" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1ns8rnc_di" bpmnElement="Task_1pwh6ea">
        <dc:Bounds x="579" y="246" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0hu29ne_di" bpmnElement="Task_04c2w9l">
        <dc:Bounds x="449" y="246" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_01inaoo_di" bpmnElement="Task_1k9ktll">
        <dc:Bounds x="319" y="246" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1hloyop_di" bpmnElement="Task_1hbhnut">
        <dc:Bounds x="709" y="376" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_03ku8ry_di" bpmnElement="Task_0hg5bxe">
        <dc:Bounds x="579" y="376" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0pj97da_di" bpmnElement="Task_0qajksg">
        <dc:Bounds x="449" y="376" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1up1k08_di" bpmnElement="Task_0fnfrqy">
        <dc:Bounds x="319" y="376" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_086p9zw_di" bpmnElement="Task_15rppzx">
        <dc:Bounds x="319" y="500" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_017qcll_di" bpmnElement="Task_150say3">
        <dc:Bounds x="449" y="500" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_154piuc_di" bpmnElement="Task_0m4nx7q">
        <dc:Bounds x="579" y="500" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_02hbhs6_di" bpmnElement="Task_06wi83w">
        <dc:Bounds x="709" y="500" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_05ramlb_di" bpmnElement="Task_1of9yep">
        <dc:Bounds x="709" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1gtitta_di" bpmnElement="Task_03dbwqm">
        <dc:Bounds x="579" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_058q1h6_di" bpmnElement="Task_1ii8nqh">
        <dc:Bounds x="449" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1j5n2cq_di" bpmnElement="Task_0qhjvnp">
        <dc:Bounds x="319" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1hl3jnk_di" bpmnElement="Task_0zie3is">
        <dc:Bounds x="319" y="730" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_005qljq_di" bpmnElement="Task_0smq08j">
        <dc:Bounds x="579" y="730" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1ufesoj_di" bpmnElement="Task_0oo63zr">
        <dc:Bounds x="449" y="730" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1056nw4_di" bpmnElement="Task_0wnekt9">
        <dc:Bounds x="709" y="730" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1szq18w_di" bpmnElement="Task_0cosis1">
        <dc:Bounds x="850" y="620" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="241" y="132" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0o98cjt_di" bpmnElement="Task_0g894iz">
        <dc:Bounds x="709" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0y9ovrw_di" bpmnElement="ExclusiveGateway_0y9ovrw" isMarkerVisible="true">
        <dc:Bounds x="465" y="105" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1sntbh3_di" bpmnElement="ServiceTask_1sntbh3">
        <dc:Bounds x="579" y="150" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_04z5pcx_di" bpmnElement="ServiceTask_04z5pcx">
        <dc:Bounds x="319" y="850" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1lb5q6j_di" bpmnElement="ServiceTask_1lb5q6j">
        <dc:Bounds x="449" y="850" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_0px7tsf_di" bpmnElement="ExclusiveGateway_0px7tsf" isMarkerVisible="true">
        <dc:Bounds x="755" y="865" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_0l59oee_di" bpmnElement="Task_1rs5273">
        <dc:Bounds x="860" y="850" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_01daoi4_di" bpmnElement="Task_1g3b4uj">
        <dc:Bounds x="600" y="850" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_09eij71_di" bpmnElement="Task_1k4ajla">
        <dc:Bounds x="321" y="110" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0s3fd9v_di" bpmnElement="ServiceTask_0s3fd9v">
        <dc:Bounds x="850" y="500" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1usjwdm_di" bpmnElement="Task_092ysub">
        <dc:Bounds x="850" y="246" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1atyet0_di" bpmnElement="ServiceTask_1atyet0">
        <dc:Bounds x="850" y="376" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_03js06f_di" bpmnElement="Task_0oh67ml">
        <dc:Bounds x="1010" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ExclusiveGateway_02nr46h_di" bpmnElement="ExclusiveGateway_02nr46h" isMarkerVisible="true">
        <dc:Bounds x="875" y="105" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0gup9xg_di" bpmnElement="ServiceTask_0gup9xg">
        <dc:Bounds x="1010" y="440" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0xu3k0a_di" bpmnElement="ServiceTask_0xu3k0a">
        <dc:Bounds x="1010" y="340" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_11uj5h7_di" bpmnElement="Task_1mr9wck">
        <dc:Bounds x="1010" y="216" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0esni1x_di" bpmnElement="Task_00an17w">
        <dc:Bounds x="1160" y="90" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_0cw8mph_di" bpmnElement="Task_08ljexp">
        <dc:Bounds x="1160" y="216" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="UserTask_1u608av_di" bpmnElement="Task_116qhv6">
        <dc:Bounds x="1160" y="850" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_17kgp5m_di" bpmnElement="Task_0wrt5b2">
        <dc:Bounds x="1160" y="340" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_14sggsb_di" bpmnElement="ServiceTask_14sggsb">
        <dc:Bounds x="1160" y="440" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_1lpyf7a_di" bpmnElement="ServiceTask_1lpyf7a">
        <dc:Bounds x="1160" y="550" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="ServiceTask_146f6y1_di" bpmnElement="Task_0kh9oz8">
        <dc:Bounds x="1160" y="660" width="100" height="80" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
